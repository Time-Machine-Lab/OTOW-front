name: otow Github Action
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 下载源码
      - uses: actions/checkout@v3
      # node.js
      - name: 下载 Nodejs-18 📀
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      # 缓存
      - name: 查找依赖缓存 🔍
        uses: actions/cache@v2
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      # 下载依赖
      - name: 如果没有缓存就 NPM 下载依赖 📥
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
      # build项目
      - name: NPM 构建项目 🛠️
        run: npm run build
      # 登录docker
      - name: 登录 Docker Hub 🛬
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      # 创建docker镜像
      - name: 创建 Docker 镜像 📷
        run: sudo docker buildx build --platform=linux/amd64 --file ./Dockerfile . --tag ${{ secrets.DOCKER_USERNAME }}/otow-front
      # 上传docker镜像
      - name: 上传 Docker 镜像 📸
        run: docker push ${{ secrets.DOCKER_USERNAME }}/otow-front
      # 连接并部署
      - name: SSH 连接并部署
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_ADDRESS }}
          username: ubuntu
          password: ${{ secrets.SERVER_PWD }}
          script: |
            stop_docker_name=$(docker ps --filter "expose=80" --format "{{.Names}}")
            if [ "$stop_docker_name" != "" ]; then
            docker stop $stop_docker_name
            fi
            docker rm otow-front || true
            docker rmi $(docker images ${{ secrets.DOCKER_USERNAME }}/otow-front -q) || true
            sleep 3
            docker pull ${{ secrets.DOCKER_USERNAME }}/otow-front
            docker run --name otow-front -d -p 0.0.0.0:80:80 -p 0.0.0.0:443:443 -v /home/nginx:/etc/nginx ${{ secrets.DOCKER_USERNAME }}/otow-front
            # 检测服务是否启动成功
            if sudo docker ps --filter name=otow-front; then
                echo "$img 服务启动成功Pass"
            else
                echo "$img 服务启动失败Fail"
            fi
